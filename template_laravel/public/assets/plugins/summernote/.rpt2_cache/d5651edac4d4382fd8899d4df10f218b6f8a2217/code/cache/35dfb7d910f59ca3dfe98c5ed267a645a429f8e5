{"code":"import $ from 'jquery';\r\nimport dom from '../core/dom';\r\nimport range from '../core/range';\r\nimport lists from '../core/lists';\r\n/**\r\n * @class Create a virtual table to create what actions to do in change.\r\n * @param {object} startPoint Cell selected to apply change.\r\n * @param {enum} where  Where change will be applied Row or Col. Use enum: TableResultAction.where\r\n * @param {enum} action Action to be applied. Use enum: TableResultAction.requestAction\r\n * @param {object} domTable Dom element of table to make changes.\r\n */\r\nvar TableResultAction = function (startPoint, where, action, domTable) {\r\n    var _startPoint = { 'colPos': 0, 'rowPos': 0 };\r\n    var _virtualTable = [];\r\n    var _actionCellList = [];\r\n    /// ///////////////////////////////////////////\r\n    // Private functions\r\n    /// ///////////////////////////////////////////\r\n    /**\r\n     * Set the startPoint of action.\r\n     */\r\n    function setStartPoint() {\r\n        if (!startPoint || !startPoint.tagName || (startPoint.tagName.toLowerCase() !== 'td' && startPoint.tagName.toLowerCase() !== 'th')) {\r\n            console.error('Impossible to identify start Cell point.', startPoint);\r\n            return;\r\n        }\r\n        _startPoint.colPos = startPoint.cellIndex;\r\n        if (!startPoint.parentElement || !startPoint.parentElement.tagName || startPoint.parentElement.tagName.toLowerCase() !== 'tr') {\r\n            console.error('Impossible to identify start Row point.', startPoint);\r\n            return;\r\n        }\r\n        _startPoint.rowPos = startPoint.parentElement.rowIndex;\r\n    }\r\n    /**\r\n     * Define virtual table position info object.\r\n     *\r\n     * @param {int} rowIndex Index position in line of virtual table.\r\n     * @param {int} cellIndex Index position in column of virtual table.\r\n     * @param {object} baseRow Row affected by this position.\r\n     * @param {object} baseCell Cell affected by this position.\r\n     * @param {bool} isSpan Inform if it is an span cell/row.\r\n     */\r\n    function setVirtualTablePosition(rowIndex, cellIndex, baseRow, baseCell, isRowSpan, isColSpan, isVirtualCell) {\r\n        var objPosition = {\r\n            'baseRow': baseRow,\r\n            'baseCell': baseCell,\r\n            'isRowSpan': isRowSpan,\r\n            'isColSpan': isColSpan,\r\n            'isVirtual': isVirtualCell\r\n        };\r\n        if (!_virtualTable[rowIndex]) {\r\n            _virtualTable[rowIndex] = [];\r\n        }\r\n        _virtualTable[rowIndex][cellIndex] = objPosition;\r\n    }\r\n    /**\r\n     * Create action cell object.\r\n     *\r\n     * @param {object} virtualTableCellObj Object of specific position on virtual table.\r\n     * @param {enum} resultAction Action to be applied in that item.\r\n     */\r\n    function getActionCell(virtualTableCellObj, resultAction, virtualRowPosition, virtualColPosition) {\r\n        return {\r\n            'baseCell': virtualTableCellObj.baseCell,\r\n            'action': resultAction,\r\n            'virtualTable': {\r\n                'rowIndex': virtualRowPosition,\r\n                'cellIndex': virtualColPosition\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Recover free index of row to append Cell.\r\n     *\r\n     * @param {int} rowIndex Index of row to find free space.\r\n     * @param {int} cellIndex Index of cell to find free space in table.\r\n     */\r\n    function recoverCellIndex(rowIndex, cellIndex) {\r\n        if (!_virtualTable[rowIndex]) {\r\n            return cellIndex;\r\n        }\r\n        if (!_virtualTable[rowIndex][cellIndex]) {\r\n            return cellIndex;\r\n        }\r\n        var newCellIndex = cellIndex;\r\n        while (_virtualTable[rowIndex][newCellIndex]) {\r\n            newCellIndex++;\r\n            if (!_virtualTable[rowIndex][newCellIndex]) {\r\n                return newCellIndex;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Recover info about row and cell and add information to virtual table.\r\n     *\r\n     * @param {object} row Row to recover information.\r\n     * @param {object} cell Cell to recover information.\r\n     */\r\n    function addCellInfoToVirtual(row, cell) {\r\n        var cellIndex = recoverCellIndex(row.rowIndex, cell.cellIndex);\r\n        var cellHasColspan = (cell.colSpan > 1);\r\n        var cellHasRowspan = (cell.rowSpan > 1);\r\n        var isThisSelectedCell = (row.rowIndex === _startPoint.rowPos && cell.cellIndex === _startPoint.colPos);\r\n        setVirtualTablePosition(row.rowIndex, cellIndex, row, cell, cellHasRowspan, cellHasColspan, false);\r\n        // Add span rows to virtual Table.\r\n        var rowspanNumber = cell.attributes.rowSpan ? parseInt(cell.attributes.rowSpan.value, 10) : 0;\r\n        if (rowspanNumber > 1) {\r\n            for (var rp = 1; rp < rowspanNumber; rp++) {\r\n                var rowspanIndex = row.rowIndex + rp;\r\n                adjustStartPoint(rowspanIndex, cellIndex, cell, isThisSelectedCell);\r\n                setVirtualTablePosition(rowspanIndex, cellIndex, row, cell, true, cellHasColspan, true);\r\n            }\r\n        }\r\n        // Add span cols to virtual table.\r\n        var colspanNumber = cell.attributes.colSpan ? parseInt(cell.attributes.colSpan.value, 10) : 0;\r\n        if (colspanNumber > 1) {\r\n            for (var cp = 1; cp < colspanNumber; cp++) {\r\n                var cellspanIndex = recoverCellIndex(row.rowIndex, (cellIndex + cp));\r\n                adjustStartPoint(row.rowIndex, cellspanIndex, cell, isThisSelectedCell);\r\n                setVirtualTablePosition(row.rowIndex, cellspanIndex, row, cell, cellHasRowspan, true, true);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Process validation and adjust of start point if needed\r\n     *\r\n     * @param {int} rowIndex\r\n     * @param {int} cellIndex\r\n     * @param {object} cell\r\n     * @param {bool} isSelectedCell\r\n     */\r\n    function adjustStartPoint(rowIndex, cellIndex, cell, isSelectedCell) {\r\n        if (rowIndex === _startPoint.rowPos && _startPoint.colPos >= cell.cellIndex && cell.cellIndex <= cellIndex && !isSelectedCell) {\r\n            _startPoint.colPos++;\r\n        }\r\n    }\r\n    /**\r\n     * Create virtual table of cells with all cells, including span cells.\r\n     */\r\n    function createVirtualTable() {\r\n        var rows = domTable.rows;\r\n        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n            var cells = rows[rowIndex].cells;\r\n            for (var cellIndex = 0; cellIndex < cells.length; cellIndex++) {\r\n                addCellInfoToVirtual(rows[rowIndex], cells[cellIndex]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get action to be applied on the cell.\r\n     *\r\n     * @param {object} cell virtual table cell to apply action\r\n     */\r\n    function getDeleteResultActionToCell(cell) {\r\n        switch (where) {\r\n            case TableResultAction.where.Column:\r\n                if (cell.isColSpan) {\r\n                    return TableResultAction.resultAction.SubtractSpanCount;\r\n                }\r\n                break;\r\n            case TableResultAction.where.Row:\r\n                if (!cell.isVirtual && cell.isRowSpan) {\r\n                    return TableResultAction.resultAction.AddCell;\r\n                }\r\n                else if (cell.isRowSpan) {\r\n                    return TableResultAction.resultAction.SubtractSpanCount;\r\n                }\r\n                break;\r\n        }\r\n        return TableResultAction.resultAction.RemoveCell;\r\n    }\r\n    /**\r\n     * Get action to be applied on the cell.\r\n     *\r\n     * @param {object} cell virtual table cell to apply action\r\n     */\r\n    function getAddResultActionToCell(cell) {\r\n        switch (where) {\r\n            case TableResultAction.where.Column:\r\n                if (cell.isColSpan) {\r\n                    return TableResultAction.resultAction.SumSpanCount;\r\n                }\r\n                else if (cell.isRowSpan && cell.isVirtual) {\r\n                    return TableResultAction.resultAction.Ignore;\r\n                }\r\n                break;\r\n            case TableResultAction.where.Row:\r\n                if (cell.isRowSpan) {\r\n                    return TableResultAction.resultAction.SumSpanCount;\r\n                }\r\n                else if (cell.isColSpan && cell.isVirtual) {\r\n                    return TableResultAction.resultAction.Ignore;\r\n                }\r\n                break;\r\n        }\r\n        return TableResultAction.resultAction.AddCell;\r\n    }\r\n    function init() {\r\n        setStartPoint();\r\n        createVirtualTable();\r\n    }\r\n    /// ///////////////////////////////////////////\r\n    // Public functions\r\n    /// ///////////////////////////////////////////\r\n    /**\r\n     * Recover array os what to do in table.\r\n     */\r\n    this.getActionList = function () {\r\n        var fixedRow = (where === TableResultAction.where.Row) ? _startPoint.rowPos : -1;\r\n        var fixedCol = (where === TableResultAction.where.Column) ? _startPoint.colPos : -1;\r\n        var actualPosition = 0;\r\n        var canContinue = true;\r\n        while (canContinue) {\r\n            var rowPosition = (fixedRow >= 0) ? fixedRow : actualPosition;\r\n            var colPosition = (fixedCol >= 0) ? fixedCol : actualPosition;\r\n            var row = _virtualTable[rowPosition];\r\n            if (!row) {\r\n                canContinue = false;\r\n                return _actionCellList;\r\n            }\r\n            var cell = row[colPosition];\r\n            if (!cell) {\r\n                canContinue = false;\r\n                return _actionCellList;\r\n            }\r\n            // Define action to be applied in this cell\r\n            var resultAction = TableResultAction.resultAction.Ignore;\r\n            switch (action) {\r\n                case TableResultAction.requestAction.Add:\r\n                    resultAction = getAddResultActionToCell(cell);\r\n                    break;\r\n                case TableResultAction.requestAction.Delete:\r\n                    resultAction = getDeleteResultActionToCell(cell);\r\n                    break;\r\n            }\r\n            _actionCellList.push(getActionCell(cell, resultAction, rowPosition, colPosition));\r\n            actualPosition++;\r\n        }\r\n        return _actionCellList;\r\n    };\r\n    init();\r\n};\r\n/**\r\n*\r\n* Where action occours enum.\r\n*/\r\nTableResultAction.where = { 'Row': 0, 'Column': 1 };\r\n/**\r\n*\r\n* Requested action to apply enum.\r\n*/\r\nTableResultAction.requestAction = { 'Add': 0, 'Delete': 1 };\r\n/**\r\n*\r\n* Result action to be executed enum.\r\n*/\r\nTableResultAction.resultAction = { 'Ignore': 0, 'SubtractSpanCount': 1, 'RemoveCell': 2, 'AddCell': 3, 'SumSpanCount': 4 };\r\n/**\r\n *\r\n * @class editing.Table\r\n *\r\n * Table\r\n *\r\n */\r\nvar Table = /** @class */ (function () {\r\n    function Table() {\r\n    }\r\n    /**\r\n     * handle tab key\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @param {Boolean} isShift\r\n     */\r\n    Table.prototype.tab = function (rng, isShift) {\r\n        var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n        var table = dom.ancestor(cell, dom.isTable);\r\n        var cells = dom.listDescendant(table, dom.isCell);\r\n        var nextCell = lists[isShift ? 'prev' : 'next'](cells, cell);\r\n        if (nextCell) {\r\n            range.create(nextCell, 0).select();\r\n        }\r\n    };\r\n    /**\r\n     * Add a new row\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @param {String} position (top/bottom)\r\n     * @return {Node}\r\n     */\r\n    Table.prototype.addRow = function (rng, position) {\r\n        var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n        var currentTr = $(cell).closest('tr');\r\n        var trAttributes = this.recoverAttributes(currentTr);\r\n        var html = $('<tr' + trAttributes + '></tr>');\r\n        var vTable = new TableResultAction(cell, TableResultAction.where.Row, TableResultAction.requestAction.Add, $(currentTr).closest('table')[0]);\r\n        var actions = vTable.getActionList();\r\n        for (var idCell = 0; idCell < actions.length; idCell++) {\r\n            var currentCell = actions[idCell];\r\n            var tdAttributes = this.recoverAttributes(currentCell.baseCell);\r\n            switch (currentCell.action) {\r\n                case TableResultAction.resultAction.AddCell:\r\n                    html.append('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n                    break;\r\n                case TableResultAction.resultAction.SumSpanCount:\r\n                    if (position === 'top') {\r\n                        var baseCellTr = currentCell.baseCell.parent;\r\n                        var isTopFromRowSpan = (!baseCellTr ? 0 : currentCell.baseCell.closest('tr').rowIndex) <= currentTr[0].rowIndex;\r\n                        if (isTopFromRowSpan) {\r\n                            var newTd = $('<div></div>').append($('<td' + tdAttributes + '>' + dom.blank + '</td>').removeAttr('rowspan')).html();\r\n                            html.append(newTd);\r\n                            break;\r\n                        }\r\n                    }\r\n                    var rowspanNumber = parseInt(currentCell.baseCell.rowSpan, 10);\r\n                    rowspanNumber++;\r\n                    currentCell.baseCell.setAttribute('rowSpan', rowspanNumber);\r\n                    break;\r\n            }\r\n        }\r\n        if (position === 'top') {\r\n            currentTr.before(html);\r\n        }\r\n        else {\r\n            var cellHasRowspan = (cell.rowSpan > 1);\r\n            if (cellHasRowspan) {\r\n                var lastTrIndex = currentTr[0].rowIndex + (cell.rowSpan - 2);\r\n                $($(currentTr).parent().find('tr')[lastTrIndex]).after($(html));\r\n                return;\r\n            }\r\n            currentTr.after(html);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new col\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @param {String} position (left/right)\r\n     * @return {Node}\r\n     */\r\n    Table.prototype.addCol = function (rng, position) {\r\n        var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n        var row = $(cell).closest('tr');\r\n        var rowsGroup = $(row).siblings();\r\n        rowsGroup.push(row);\r\n        var vTable = new TableResultAction(cell, TableResultAction.where.Column, TableResultAction.requestAction.Add, $(row).closest('table')[0]);\r\n        var actions = vTable.getActionList();\r\n        for (var actionIndex = 0; actionIndex < actions.length; actionIndex++) {\r\n            var currentCell = actions[actionIndex];\r\n            var tdAttributes = this.recoverAttributes(currentCell.baseCell);\r\n            switch (currentCell.action) {\r\n                case TableResultAction.resultAction.AddCell:\r\n                    if (position === 'right') {\r\n                        $(currentCell.baseCell).after('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n                    }\r\n                    else {\r\n                        $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n                    }\r\n                    break;\r\n                case TableResultAction.resultAction.SumSpanCount:\r\n                    if (position === 'right') {\r\n                        var colspanNumber = parseInt(currentCell.baseCell.colSpan, 10);\r\n                        colspanNumber++;\r\n                        currentCell.baseCell.setAttribute('colSpan', colspanNumber);\r\n                    }\r\n                    else {\r\n                        $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    /*\r\n    * Copy attributes from element.\r\n    *\r\n    * @param {object} Element to recover attributes.\r\n    * @return {string} Copied string elements.\r\n    */\r\n    Table.prototype.recoverAttributes = function (el) {\r\n        var resultStr = '';\r\n        if (!el) {\r\n            return resultStr;\r\n        }\r\n        var attrList = el.attributes || [];\r\n        for (var i = 0; i < attrList.length; i++) {\r\n            if (attrList[i].name.toLowerCase() === 'id') {\r\n                continue;\r\n            }\r\n            if (attrList[i].specified) {\r\n                resultStr += ' ' + attrList[i].name + '=\\'' + attrList[i].value + '\\'';\r\n            }\r\n        }\r\n        return resultStr;\r\n    };\r\n    /**\r\n     * Delete current row\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @return {Node}\r\n     */\r\n    Table.prototype.deleteRow = function (rng) {\r\n        var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n        var row = $(cell).closest('tr');\r\n        var cellPos = row.children('td, th').index($(cell));\r\n        var rowPos = row[0].rowIndex;\r\n        var vTable = new TableResultAction(cell, TableResultAction.where.Row, TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\r\n        var actions = vTable.getActionList();\r\n        for (var actionIndex = 0; actionIndex < actions.length; actionIndex++) {\r\n            if (!actions[actionIndex]) {\r\n                continue;\r\n            }\r\n            var baseCell = actions[actionIndex].baseCell;\r\n            var virtualPosition = actions[actionIndex].virtualTable;\r\n            var hasRowspan = (baseCell.rowSpan && baseCell.rowSpan > 1);\r\n            var rowspanNumber = (hasRowspan) ? parseInt(baseCell.rowSpan, 10) : 0;\r\n            switch (actions[actionIndex].action) {\r\n                case TableResultAction.resultAction.Ignore:\r\n                    continue;\r\n                case TableResultAction.resultAction.AddCell:\r\n                    var nextRow = row.next('tr')[0];\r\n                    if (!nextRow) {\r\n                        continue;\r\n                    }\r\n                    var cloneRow = row[0].cells[cellPos];\r\n                    if (hasRowspan) {\r\n                        if (rowspanNumber > 2) {\r\n                            rowspanNumber--;\r\n                            nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\r\n                            nextRow.cells[cellPos].setAttribute('rowSpan', rowspanNumber);\r\n                            nextRow.cells[cellPos].innerHTML = '';\r\n                        }\r\n                        else if (rowspanNumber === 2) {\r\n                            nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\r\n                            nextRow.cells[cellPos].removeAttribute('rowSpan');\r\n                            nextRow.cells[cellPos].innerHTML = '';\r\n                        }\r\n                    }\r\n                    continue;\r\n                case TableResultAction.resultAction.SubtractSpanCount:\r\n                    if (hasRowspan) {\r\n                        if (rowspanNumber > 2) {\r\n                            rowspanNumber--;\r\n                            baseCell.setAttribute('rowSpan', rowspanNumber);\r\n                            if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) {\r\n                                baseCell.innerHTML = '';\r\n                            }\r\n                        }\r\n                        else if (rowspanNumber === 2) {\r\n                            baseCell.removeAttribute('rowSpan');\r\n                            if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) {\r\n                                baseCell.innerHTML = '';\r\n                            }\r\n                        }\r\n                    }\r\n                    continue;\r\n                case TableResultAction.resultAction.RemoveCell:\r\n                    // Do not need remove cell because row will be deleted.\r\n                    continue;\r\n            }\r\n        }\r\n        row.remove();\r\n    };\r\n    /**\r\n     * Delete current col\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @return {Node}\r\n     */\r\n    Table.prototype.deleteCol = function (rng) {\r\n        var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n        var row = $(cell).closest('tr');\r\n        var cellPos = row.children('td, th').index($(cell));\r\n        var vTable = new TableResultAction(cell, TableResultAction.where.Column, TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\r\n        var actions = vTable.getActionList();\r\n        for (var actionIndex = 0; actionIndex < actions.length; actionIndex++) {\r\n            if (!actions[actionIndex]) {\r\n                continue;\r\n            }\r\n            switch (actions[actionIndex].action) {\r\n                case TableResultAction.resultAction.Ignore:\r\n                    continue;\r\n                case TableResultAction.resultAction.SubtractSpanCount:\r\n                    var baseCell = actions[actionIndex].baseCell;\r\n                    var hasColspan = (baseCell.colSpan && baseCell.colSpan > 1);\r\n                    if (hasColspan) {\r\n                        var colspanNumber = (baseCell.colSpan) ? parseInt(baseCell.colSpan, 10) : 0;\r\n                        if (colspanNumber > 2) {\r\n                            colspanNumber--;\r\n                            baseCell.setAttribute('colSpan', colspanNumber);\r\n                            if (baseCell.cellIndex === cellPos) {\r\n                                baseCell.innerHTML = '';\r\n                            }\r\n                        }\r\n                        else if (colspanNumber === 2) {\r\n                            baseCell.removeAttribute('colSpan');\r\n                            if (baseCell.cellIndex === cellPos) {\r\n                                baseCell.innerHTML = '';\r\n                            }\r\n                        }\r\n                    }\r\n                    continue;\r\n                case TableResultAction.resultAction.RemoveCell:\r\n                    dom.remove(actions[actionIndex].baseCell, true);\r\n                    continue;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * create empty table element\r\n     *\r\n     * @param {Number} rowCount\r\n     * @param {Number} colCount\r\n     * @return {Node}\r\n     */\r\n    Table.prototype.createTable = function (colCount, rowCount, options) {\r\n        var tds = [];\r\n        var tdHTML;\r\n        for (var idxCol = 0; idxCol < colCount; idxCol++) {\r\n            tds.push('<td>' + dom.blank + '</td>');\r\n        }\r\n        tdHTML = tds.join('');\r\n        var trs = [];\r\n        var trHTML;\r\n        for (var idxRow = 0; idxRow < rowCount; idxRow++) {\r\n            trs.push('<tr>' + tdHTML + '</tr>');\r\n        }\r\n        trHTML = trs.join('');\r\n        var $table = $('<table>' + trHTML + '</table>');\r\n        if (options && options.tableClassName) {\r\n            $table.addClass(options.tableClassName);\r\n        }\r\n        return $table[0];\r\n    };\r\n    /**\r\n     * Delete current table\r\n     *\r\n     * @param {WrappedRange} rng\r\n     * @return {Node}\r\n     */\r\n    Table.prototype.deleteTable = function (rng) {\r\n        var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\r\n        $(cell).closest('table').remove();\r\n    };\r\n    return Table;\r\n}());\r\nexport default Table;\r\n//# sourceMappingURL=Table.js.map","map":{"version":3,"file":"Table.js","sourceRoot":"","sources":["../../src/js/base/editing/Table.js"],"names":[],"mappings":"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"}}
