{"code":"import $ from 'jquery';\r\nimport func from './func';\r\nimport lists from './lists';\r\nimport env from './env';\r\nvar NBSP_CHAR = String.fromCharCode(160);\r\nvar ZERO_WIDTH_NBSP_CHAR = '\\ufeff';\r\n/**\r\n * @method isEditable\r\n *\r\n * returns whether node is `note-editable` or not.\r\n *\r\n * @param {Node} node\r\n * @return {Boolean}\r\n */\r\nfunction isEditable(node) {\r\n    return node && $(node).hasClass('note-editable');\r\n}\r\n/**\r\n * @method isControlSizing\r\n *\r\n * returns whether node is `note-control-sizing` or not.\r\n *\r\n * @param {Node} node\r\n * @return {Boolean}\r\n */\r\nfunction isControlSizing(node) {\r\n    return node && $(node).hasClass('note-control-sizing');\r\n}\r\n/**\r\n * @method makePredByNodeName\r\n *\r\n * returns predicate which judge whether nodeName is same\r\n *\r\n * @param {String} nodeName\r\n * @return {Function}\r\n */\r\nfunction makePredByNodeName(nodeName) {\r\n    nodeName = nodeName.toUpperCase();\r\n    return function (node) {\r\n        return node && node.nodeName.toUpperCase() === nodeName;\r\n    };\r\n}\r\n/**\r\n * @method isText\r\n *\r\n *\r\n *\r\n * @param {Node} node\r\n * @return {Boolean} true if node's type is text(3)\r\n */\r\nfunction isText(node) {\r\n    return node && node.nodeType === 3;\r\n}\r\n/**\r\n * @method isElement\r\n *\r\n *\r\n *\r\n * @param {Node} node\r\n * @return {Boolean} true if node's type is element(1)\r\n */\r\nfunction isElement(node) {\r\n    return node && node.nodeType === 1;\r\n}\r\n/**\r\n * ex) br, col, embed, hr, img, input, ...\r\n * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\r\n */\r\nfunction isVoid(node) {\r\n    return node && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT/.test(node.nodeName.toUpperCase());\r\n}\r\nfunction isPara(node) {\r\n    if (isEditable(node)) {\r\n        return false;\r\n    }\r\n    // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\r\n    return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\r\n}\r\nfunction isHeading(node) {\r\n    return node && /^H[1-7]/.test(node.nodeName.toUpperCase());\r\n}\r\nvar isPre = makePredByNodeName('PRE');\r\nvar isLi = makePredByNodeName('LI');\r\nfunction isPurePara(node) {\r\n    return isPara(node) && !isLi(node);\r\n}\r\nvar isTable = makePredByNodeName('TABLE');\r\nvar isData = makePredByNodeName('DATA');\r\nfunction isInline(node) {\r\n    return !isBodyContainer(node) &&\r\n        !isList(node) &&\r\n        !isHr(node) &&\r\n        !isPara(node) &&\r\n        !isTable(node) &&\r\n        !isBlockquote(node) &&\r\n        !isData(node);\r\n}\r\nfunction isList(node) {\r\n    return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\r\n}\r\nvar isHr = makePredByNodeName('HR');\r\nfunction isCell(node) {\r\n    return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\r\n}\r\nvar isBlockquote = makePredByNodeName('BLOCKQUOTE');\r\nfunction isBodyContainer(node) {\r\n    return isCell(node) || isBlockquote(node) || isEditable(node);\r\n}\r\nvar isAnchor = makePredByNodeName('A');\r\nfunction isParaInline(node) {\r\n    return isInline(node) && !!ancestor(node, isPara);\r\n}\r\nfunction isBodyInline(node) {\r\n    return isInline(node) && !ancestor(node, isPara);\r\n}\r\nvar isBody = makePredByNodeName('BODY');\r\n/**\r\n * returns whether nodeB is closest sibling of nodeA\r\n *\r\n * @param {Node} nodeA\r\n * @param {Node} nodeB\r\n * @return {Boolean}\r\n */\r\nfunction isClosestSibling(nodeA, nodeB) {\r\n    return nodeA.nextSibling === nodeB ||\r\n        nodeA.previousSibling === nodeB;\r\n}\r\n/**\r\n * returns array of closest siblings with node\r\n *\r\n * @param {Node} node\r\n * @param {function} [pred] - predicate function\r\n * @return {Node[]}\r\n */\r\nfunction withClosestSiblings(node, pred) {\r\n    pred = pred || func.ok;\r\n    var siblings = [];\r\n    if (node.previousSibling && pred(node.previousSibling)) {\r\n        siblings.push(node.previousSibling);\r\n    }\r\n    siblings.push(node);\r\n    if (node.nextSibling && pred(node.nextSibling)) {\r\n        siblings.push(node.nextSibling);\r\n    }\r\n    return siblings;\r\n}\r\n/**\r\n * blank HTML for cursor position\r\n * - [workaround] old IE only works with &nbsp;\r\n * - [workaround] IE11 and other browser works with bogus br\r\n */\r\nvar blankHTML = env.isMSIE && env.browserVersion < 11 ? '&nbsp;' : '<br>';\r\n/**\r\n * @method nodeLength\r\n *\r\n * returns #text's text size or element's childNodes size\r\n *\r\n * @param {Node} node\r\n */\r\nfunction nodeLength(node) {\r\n    if (isText(node)) {\r\n        return node.nodeValue.length;\r\n    }\r\n    if (node) {\r\n        return node.childNodes.length;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * returns whether node is empty or not.\r\n *\r\n * @param {Node} node\r\n * @return {Boolean}\r\n */\r\nfunction isEmpty(node) {\r\n    var len = nodeLength(node);\r\n    if (len === 0) {\r\n        return true;\r\n    }\r\n    else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {\r\n        // ex) <p><br></p>, <span><br></span>\r\n        return true;\r\n    }\r\n    else if (lists.all(node.childNodes, isText) && node.innerHTML === '') {\r\n        // ex) <p></p>, <span></span>\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * padding blankHTML if node is empty (for cursor position)\r\n */\r\nfunction paddingBlankHTML(node) {\r\n    if (!isVoid(node) && !nodeLength(node)) {\r\n        node.innerHTML = blankHTML;\r\n    }\r\n}\r\n/**\r\n * find nearest ancestor predicate hit\r\n *\r\n * @param {Node} node\r\n * @param {Function} pred - predicate function\r\n */\r\nfunction ancestor(node, pred) {\r\n    while (node) {\r\n        if (pred(node)) {\r\n            return node;\r\n        }\r\n        if (isEditable(node)) {\r\n            break;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * find nearest ancestor only single child blood line and predicate hit\r\n *\r\n * @param {Node} node\r\n * @param {Function} pred - predicate function\r\n */\r\nfunction singleChildAncestor(node, pred) {\r\n    node = node.parentNode;\r\n    while (node) {\r\n        if (nodeLength(node) !== 1) {\r\n            break;\r\n        }\r\n        if (pred(node)) {\r\n            return node;\r\n        }\r\n        if (isEditable(node)) {\r\n            break;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * returns new array of ancestor nodes (until predicate hit).\r\n *\r\n * @param {Node} node\r\n * @param {Function} [optional] pred - predicate function\r\n */\r\nfunction listAncestor(node, pred) {\r\n    pred = pred || func.fail;\r\n    var ancestors = [];\r\n    ancestor(node, function (el) {\r\n        if (!isEditable(el)) {\r\n            ancestors.push(el);\r\n        }\r\n        return pred(el);\r\n    });\r\n    return ancestors;\r\n}\r\n/**\r\n * find farthest ancestor predicate hit\r\n */\r\nfunction lastAncestor(node, pred) {\r\n    var ancestors = listAncestor(node);\r\n    return lists.last(ancestors.filter(pred));\r\n}\r\n/**\r\n * returns common ancestor node between two nodes.\r\n *\r\n * @param {Node} nodeA\r\n * @param {Node} nodeB\r\n */\r\nfunction commonAncestor(nodeA, nodeB) {\r\n    var ancestors = listAncestor(nodeA);\r\n    for (var n = nodeB; n; n = n.parentNode) {\r\n        if ($.inArray(n, ancestors) > -1) {\r\n            return n;\r\n        }\r\n    }\r\n    return null; // difference document area\r\n}\r\n/**\r\n * listing all previous siblings (until predicate hit).\r\n *\r\n * @param {Node} node\r\n * @param {Function} [optional] pred - predicate function\r\n */\r\nfunction listPrev(node, pred) {\r\n    pred = pred || func.fail;\r\n    var nodes = [];\r\n    while (node) {\r\n        if (pred(node)) {\r\n            break;\r\n        }\r\n        nodes.push(node);\r\n        node = node.previousSibling;\r\n    }\r\n    return nodes;\r\n}\r\n/**\r\n * listing next siblings (until predicate hit).\r\n *\r\n * @param {Node} node\r\n * @param {Function} [pred] - predicate function\r\n */\r\nfunction listNext(node, pred) {\r\n    pred = pred || func.fail;\r\n    var nodes = [];\r\n    while (node) {\r\n        if (pred(node)) {\r\n            break;\r\n        }\r\n        nodes.push(node);\r\n        node = node.nextSibling;\r\n    }\r\n    return nodes;\r\n}\r\n/**\r\n * listing descendant nodes\r\n *\r\n * @param {Node} node\r\n * @param {Function} [pred] - predicate function\r\n */\r\nfunction listDescendant(node, pred) {\r\n    var descendants = [];\r\n    pred = pred || func.ok;\r\n    // start DFS(depth first search) with node\r\n    (function fnWalk(current) {\r\n        if (node !== current && pred(current)) {\r\n            descendants.push(current);\r\n        }\r\n        for (var idx = 0, len = current.childNodes.length; idx < len; idx++) {\r\n            fnWalk(current.childNodes[idx]);\r\n        }\r\n    })(node);\r\n    return descendants;\r\n}\r\n/**\r\n * wrap node with new tag.\r\n *\r\n * @param {Node} node\r\n * @param {Node} tagName of wrapper\r\n * @return {Node} - wrapper\r\n */\r\nfunction wrap(node, wrapperName) {\r\n    var parent = node.parentNode;\r\n    var wrapper = $('<' + wrapperName + '>')[0];\r\n    parent.insertBefore(wrapper, node);\r\n    wrapper.appendChild(node);\r\n    return wrapper;\r\n}\r\n/**\r\n * insert node after preceding\r\n *\r\n * @param {Node} node\r\n * @param {Node} preceding - predicate function\r\n */\r\nfunction insertAfter(node, preceding) {\r\n    var next = preceding.nextSibling;\r\n    var parent = preceding.parentNode;\r\n    if (next) {\r\n        parent.insertBefore(node, next);\r\n    }\r\n    else {\r\n        parent.appendChild(node);\r\n    }\r\n    return node;\r\n}\r\n/**\r\n * append elements.\r\n *\r\n * @param {Node} node\r\n * @param {Collection} aChild\r\n */\r\nfunction appendChildNodes(node, aChild) {\r\n    $.each(aChild, function (idx, child) {\r\n        node.appendChild(child);\r\n    });\r\n    return node;\r\n}\r\n/**\r\n * returns whether boundaryPoint is left edge or not.\r\n *\r\n * @param {BoundaryPoint} point\r\n * @return {Boolean}\r\n */\r\nfunction isLeftEdgePoint(point) {\r\n    return point.offset === 0;\r\n}\r\n/**\r\n * returns whether boundaryPoint is right edge or not.\r\n *\r\n * @param {BoundaryPoint} point\r\n * @return {Boolean}\r\n */\r\nfunction isRightEdgePoint(point) {\r\n    return point.offset === nodeLength(point.node);\r\n}\r\n/**\r\n * returns whether boundaryPoint is edge or not.\r\n *\r\n * @param {BoundaryPoint} point\r\n * @return {Boolean}\r\n */\r\nfunction isEdgePoint(point) {\r\n    return isLeftEdgePoint(point) || isRightEdgePoint(point);\r\n}\r\n/**\r\n * returns whether node is left edge of ancestor or not.\r\n *\r\n * @param {Node} node\r\n * @param {Node} ancestor\r\n * @return {Boolean}\r\n */\r\nfunction isLeftEdgeOf(node, ancestor) {\r\n    while (node && node !== ancestor) {\r\n        if (position(node) !== 0) {\r\n            return false;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * returns whether node is right edge of ancestor or not.\r\n *\r\n * @param {Node} node\r\n * @param {Node} ancestor\r\n * @return {Boolean}\r\n */\r\nfunction isRightEdgeOf(node, ancestor) {\r\n    if (!ancestor) {\r\n        return false;\r\n    }\r\n    while (node && node !== ancestor) {\r\n        if (position(node) !== nodeLength(node.parentNode) - 1) {\r\n            return false;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * returns whether point is left edge of ancestor or not.\r\n * @param {BoundaryPoint} point\r\n * @param {Node} ancestor\r\n * @return {Boolean}\r\n */\r\nfunction isLeftEdgePointOf(point, ancestor) {\r\n    return isLeftEdgePoint(point) && isLeftEdgeOf(point.node, ancestor);\r\n}\r\n/**\r\n * returns whether point is right edge of ancestor or not.\r\n * @param {BoundaryPoint} point\r\n * @param {Node} ancestor\r\n * @return {Boolean}\r\n */\r\nfunction isRightEdgePointOf(point, ancestor) {\r\n    return isRightEdgePoint(point) && isRightEdgeOf(point.node, ancestor);\r\n}\r\n/**\r\n * returns offset from parent.\r\n *\r\n * @param {Node} node\r\n */\r\nfunction position(node) {\r\n    var offset = 0;\r\n    while ((node = node.previousSibling)) {\r\n        offset += 1;\r\n    }\r\n    return offset;\r\n}\r\nfunction hasChildren(node) {\r\n    return !!(node && node.childNodes && node.childNodes.length);\r\n}\r\n/**\r\n * returns previous boundaryPoint\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Boolean} isSkipInnerOffset\r\n * @return {BoundaryPoint}\r\n */\r\nfunction prevPoint(point, isSkipInnerOffset) {\r\n    var node;\r\n    var offset;\r\n    if (point.offset === 0) {\r\n        if (isEditable(point.node)) {\r\n            return null;\r\n        }\r\n        node = point.node.parentNode;\r\n        offset = position(point.node);\r\n    }\r\n    else if (hasChildren(point.node)) {\r\n        node = point.node.childNodes[point.offset - 1];\r\n        offset = nodeLength(node);\r\n    }\r\n    else {\r\n        node = point.node;\r\n        offset = isSkipInnerOffset ? 0 : point.offset - 1;\r\n    }\r\n    return {\r\n        node: node,\r\n        offset: offset\r\n    };\r\n}\r\n/**\r\n * returns next boundaryPoint\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Boolean} isSkipInnerOffset\r\n * @return {BoundaryPoint}\r\n */\r\nfunction nextPoint(point, isSkipInnerOffset) {\r\n    var node, offset;\r\n    if (nodeLength(point.node) === point.offset) {\r\n        if (isEditable(point.node)) {\r\n            return null;\r\n        }\r\n        node = point.node.parentNode;\r\n        offset = position(point.node) + 1;\r\n    }\r\n    else if (hasChildren(point.node)) {\r\n        node = point.node.childNodes[point.offset];\r\n        offset = 0;\r\n    }\r\n    else {\r\n        node = point.node;\r\n        offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\r\n    }\r\n    return {\r\n        node: node,\r\n        offset: offset\r\n    };\r\n}\r\n/**\r\n * returns whether pointA and pointB is same or not.\r\n *\r\n * @param {BoundaryPoint} pointA\r\n * @param {BoundaryPoint} pointB\r\n * @return {Boolean}\r\n */\r\nfunction isSamePoint(pointA, pointB) {\r\n    return pointA.node === pointB.node && pointA.offset === pointB.offset;\r\n}\r\n/**\r\n * returns whether point is visible (can set cursor) or not.\r\n *\r\n * @param {BoundaryPoint} point\r\n * @return {Boolean}\r\n */\r\nfunction isVisiblePoint(point) {\r\n    if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {\r\n        return true;\r\n    }\r\n    var leftNode = point.node.childNodes[point.offset - 1];\r\n    var rightNode = point.node.childNodes[point.offset];\r\n    if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @method prevPointUtil\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Function} pred\r\n * @return {BoundaryPoint}\r\n */\r\nfunction prevPointUntil(point, pred) {\r\n    while (point) {\r\n        if (pred(point)) {\r\n            return point;\r\n        }\r\n        point = prevPoint(point);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @method nextPointUntil\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Function} pred\r\n * @return {BoundaryPoint}\r\n */\r\nfunction nextPointUntil(point, pred) {\r\n    while (point) {\r\n        if (pred(point)) {\r\n            return point;\r\n        }\r\n        point = nextPoint(point);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * returns whether point has character or not.\r\n *\r\n * @param {Point} point\r\n * @return {Boolean}\r\n */\r\nfunction isCharPoint(point) {\r\n    if (!isText(point.node)) {\r\n        return false;\r\n    }\r\n    var ch = point.node.nodeValue.charAt(point.offset - 1);\r\n    return ch && (ch !== ' ' && ch !== NBSP_CHAR);\r\n}\r\n/**\r\n * @method walkPoint\r\n *\r\n * @param {BoundaryPoint} startPoint\r\n * @param {BoundaryPoint} endPoint\r\n * @param {Function} handler\r\n * @param {Boolean} isSkipInnerOffset\r\n */\r\nfunction walkPoint(startPoint, endPoint, handler, isSkipInnerOffset) {\r\n    var point = startPoint;\r\n    while (point) {\r\n        handler(point);\r\n        if (isSamePoint(point, endPoint)) {\r\n            break;\r\n        }\r\n        var isSkipOffset = isSkipInnerOffset &&\r\n            startPoint.node !== point.node &&\r\n            endPoint.node !== point.node;\r\n        point = nextPoint(point, isSkipOffset);\r\n    }\r\n}\r\n/**\r\n * @method makeOffsetPath\r\n *\r\n * return offsetPath(array of offset) from ancestor\r\n *\r\n * @param {Node} ancestor - ancestor node\r\n * @param {Node} node\r\n */\r\nfunction makeOffsetPath(ancestor, node) {\r\n    var ancestors = listAncestor(node, func.eq(ancestor));\r\n    return ancestors.map(position).reverse();\r\n}\r\n/**\r\n * @method fromOffsetPath\r\n *\r\n * return element from offsetPath(array of offset)\r\n *\r\n * @param {Node} ancestor - ancestor node\r\n * @param {array} offsets - offsetPath\r\n */\r\nfunction fromOffsetPath(ancestor, offsets) {\r\n    var current = ancestor;\r\n    for (var i = 0, len = offsets.length; i < len; i++) {\r\n        if (current.childNodes.length <= offsets[i]) {\r\n            current = current.childNodes[current.childNodes.length - 1];\r\n        }\r\n        else {\r\n            current = current.childNodes[offsets[i]];\r\n        }\r\n    }\r\n    return current;\r\n}\r\n/**\r\n * @method splitNode\r\n *\r\n * split element or #text\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\r\n * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\r\n * @return {Node} right node of boundaryPoint\r\n */\r\nfunction splitNode(point, options) {\r\n    var isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\r\n    var isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\r\n    // edge case\r\n    if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\r\n        if (isLeftEdgePoint(point)) {\r\n            return point.node;\r\n        }\r\n        else if (isRightEdgePoint(point)) {\r\n            return point.node.nextSibling;\r\n        }\r\n    }\r\n    // split #text\r\n    if (isText(point.node)) {\r\n        return point.node.splitText(point.offset);\r\n    }\r\n    else {\r\n        var childNode = point.node.childNodes[point.offset];\r\n        var clone = insertAfter(point.node.cloneNode(false), point.node);\r\n        appendChildNodes(clone, listNext(childNode));\r\n        if (!isSkipPaddingBlankHTML) {\r\n            paddingBlankHTML(point.node);\r\n            paddingBlankHTML(clone);\r\n        }\r\n        return clone;\r\n    }\r\n}\r\n/**\r\n * @method splitTree\r\n *\r\n * split tree by point\r\n *\r\n * @param {Node} root - split root\r\n * @param {BoundaryPoint} point\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\r\n * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\r\n * @return {Node} right node of boundaryPoint\r\n */\r\nfunction splitTree(root, point, options) {\r\n    // ex) [#text, <span>, <p>]\r\n    var ancestors = listAncestor(point.node, func.eq(root));\r\n    if (!ancestors.length) {\r\n        return null;\r\n    }\r\n    else if (ancestors.length === 1) {\r\n        return splitNode(point, options);\r\n    }\r\n    return ancestors.reduce(function (node, parent) {\r\n        if (node === point.node) {\r\n            node = splitNode(point, options);\r\n        }\r\n        return splitNode({\r\n            node: parent,\r\n            offset: node ? position(node) : nodeLength(parent)\r\n        }, options);\r\n    });\r\n}\r\n/**\r\n * split point\r\n *\r\n * @param {Point} point\r\n * @param {Boolean} isInline\r\n * @return {Object}\r\n */\r\nfunction splitPoint(point, isInline) {\r\n    // find splitRoot, container\r\n    //  - inline: splitRoot is a child of paragraph\r\n    //  - block: splitRoot is a child of bodyContainer\r\n    var pred = isInline ? isPara : isBodyContainer;\r\n    var ancestors = listAncestor(point.node, pred);\r\n    var topAncestor = lists.last(ancestors) || point.node;\r\n    var splitRoot, container;\r\n    if (pred(topAncestor)) {\r\n        splitRoot = ancestors[ancestors.length - 2];\r\n        container = topAncestor;\r\n    }\r\n    else {\r\n        splitRoot = topAncestor;\r\n        container = splitRoot.parentNode;\r\n    }\r\n    // if splitRoot is exists, split with splitTree\r\n    var pivot = splitRoot && splitTree(splitRoot, point, {\r\n        isSkipPaddingBlankHTML: isInline,\r\n        isNotSplitEdgePoint: isInline\r\n    });\r\n    // if container is point.node, find pivot with point.offset\r\n    if (!pivot && container === point.node) {\r\n        pivot = point.node.childNodes[point.offset];\r\n    }\r\n    return {\r\n        rightNode: pivot,\r\n        container: container\r\n    };\r\n}\r\nfunction create(nodeName) {\r\n    return document.createElement(nodeName);\r\n}\r\nfunction createText(text) {\r\n    return document.createTextNode(text);\r\n}\r\n/**\r\n * @method remove\r\n *\r\n * remove node, (isRemoveChild: remove child or not)\r\n *\r\n * @param {Node} node\r\n * @param {Boolean} isRemoveChild\r\n */\r\nfunction remove(node, isRemoveChild) {\r\n    if (!node || !node.parentNode) {\r\n        return;\r\n    }\r\n    if (node.removeNode) {\r\n        return node.removeNode(isRemoveChild);\r\n    }\r\n    var parent = node.parentNode;\r\n    if (!isRemoveChild) {\r\n        var nodes = [];\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            nodes.push(node.childNodes[i]);\r\n        }\r\n        for (var i = 0, len = nodes.length; i < len; i++) {\r\n            parent.insertBefore(nodes[i], node);\r\n        }\r\n    }\r\n    parent.removeChild(node);\r\n}\r\n/**\r\n * @method removeWhile\r\n *\r\n * @param {Node} node\r\n * @param {Function} pred\r\n */\r\nfunction removeWhile(node, pred) {\r\n    while (node) {\r\n        if (isEditable(node) || !pred(node)) {\r\n            break;\r\n        }\r\n        var parent_1 = node.parentNode;\r\n        remove(node);\r\n        node = parent_1;\r\n    }\r\n}\r\n/**\r\n * @method replace\r\n *\r\n * replace node with provided nodeName\r\n *\r\n * @param {Node} node\r\n * @param {String} nodeName\r\n * @return {Node} - new node\r\n */\r\nfunction replace(node, nodeName) {\r\n    if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\r\n        return node;\r\n    }\r\n    var newNode = create(nodeName);\r\n    if (node.style.cssText) {\r\n        newNode.style.cssText = node.style.cssText;\r\n    }\r\n    appendChildNodes(newNode, lists.from(node.childNodes));\r\n    insertAfter(newNode, node);\r\n    remove(node);\r\n    return newNode;\r\n}\r\nvar isTextarea = makePredByNodeName('TEXTAREA');\r\n/**\r\n * @param {jQuery} $node\r\n * @param {Boolean} [stripLinebreaks] - default: false\r\n */\r\nfunction value($node, stripLinebreaks) {\r\n    var val = isTextarea($node[0]) ? $node.val() : $node.html();\r\n    if (stripLinebreaks) {\r\n        return val.replace(/[\\n\\r]/g, '');\r\n    }\r\n    return val;\r\n}\r\n/**\r\n * @method html\r\n *\r\n * get the HTML contents of node\r\n *\r\n * @param {jQuery} $node\r\n * @param {Boolean} [isNewlineOnBlock]\r\n */\r\nfunction html($node, isNewlineOnBlock) {\r\n    var markup = value($node);\r\n    if (isNewlineOnBlock) {\r\n        var regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\r\n        markup = markup.replace(regexTag, function (match, endSlash, name) {\r\n            name = name.toUpperCase();\r\n            var isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\r\n                !!endSlash;\r\n            var isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\r\n            return match + ((isEndOfInlineContainer || isBlockNode) ? '\\n' : '');\r\n        });\r\n        markup = $.trim(markup);\r\n    }\r\n    return markup;\r\n}\r\nfunction posFromPlaceholder(placeholder) {\r\n    var $placeholder = $(placeholder);\r\n    var pos = $placeholder.offset();\r\n    var height = $placeholder.outerHeight(true); // include margin\r\n    return {\r\n        left: pos.left,\r\n        top: pos.top + height\r\n    };\r\n}\r\nfunction attachEvents($node, events) {\r\n    Object.keys(events).forEach(function (key) {\r\n        $node.on(key, events[key]);\r\n    });\r\n}\r\nfunction detachEvents($node, events) {\r\n    Object.keys(events).forEach(function (key) {\r\n        $node.off(key, events[key]);\r\n    });\r\n}\r\n/**\r\n * @method isCustomStyleTag\r\n *\r\n * assert if a node contains a \"note-styletag\" class,\r\n * which implies that's a custom-made style tag node\r\n *\r\n * @param {Node} an HTML DOM node\r\n */\r\nfunction isCustomStyleTag(node) {\r\n    return node && !isText(node) && lists.contains(node.classList, 'note-styletag');\r\n}\r\nexport default {\r\n    /** @property {String} NBSP_CHAR */\r\n    NBSP_CHAR: NBSP_CHAR,\r\n    /** @property {String} ZERO_WIDTH_NBSP_CHAR */\r\n    ZERO_WIDTH_NBSP_CHAR: ZERO_WIDTH_NBSP_CHAR,\r\n    /** @property {String} blank */\r\n    blank: blankHTML,\r\n    /** @property {String} emptyPara */\r\n    emptyPara: \"<p>\" + blankHTML + \"</p>\",\r\n    makePredByNodeName: makePredByNodeName,\r\n    isEditable: isEditable,\r\n    isControlSizing: isControlSizing,\r\n    isText: isText,\r\n    isElement: isElement,\r\n    isVoid: isVoid,\r\n    isPara: isPara,\r\n    isPurePara: isPurePara,\r\n    isHeading: isHeading,\r\n    isInline: isInline,\r\n    isBlock: func.not(isInline),\r\n    isBodyInline: isBodyInline,\r\n    isBody: isBody,\r\n    isParaInline: isParaInline,\r\n    isPre: isPre,\r\n    isList: isList,\r\n    isTable: isTable,\r\n    isData: isData,\r\n    isCell: isCell,\r\n    isBlockquote: isBlockquote,\r\n    isBodyContainer: isBodyContainer,\r\n    isAnchor: isAnchor,\r\n    isDiv: makePredByNodeName('DIV'),\r\n    isLi: isLi,\r\n    isBR: makePredByNodeName('BR'),\r\n    isSpan: makePredByNodeName('SPAN'),\r\n    isB: makePredByNodeName('B'),\r\n    isU: makePredByNodeName('U'),\r\n    isS: makePredByNodeName('S'),\r\n    isI: makePredByNodeName('I'),\r\n    isImg: makePredByNodeName('IMG'),\r\n    isTextarea: isTextarea,\r\n    isEmpty: isEmpty,\r\n    isEmptyAnchor: func.and(isAnchor, isEmpty),\r\n    isClosestSibling: isClosestSibling,\r\n    withClosestSiblings: withClosestSiblings,\r\n    nodeLength: nodeLength,\r\n    isLeftEdgePoint: isLeftEdgePoint,\r\n    isRightEdgePoint: isRightEdgePoint,\r\n    isEdgePoint: isEdgePoint,\r\n    isLeftEdgeOf: isLeftEdgeOf,\r\n    isRightEdgeOf: isRightEdgeOf,\r\n    isLeftEdgePointOf: isLeftEdgePointOf,\r\n    isRightEdgePointOf: isRightEdgePointOf,\r\n    prevPoint: prevPoint,\r\n    nextPoint: nextPoint,\r\n    isSamePoint: isSamePoint,\r\n    isVisiblePoint: isVisiblePoint,\r\n    prevPointUntil: prevPointUntil,\r\n    nextPointUntil: nextPointUntil,\r\n    isCharPoint: isCharPoint,\r\n    walkPoint: walkPoint,\r\n    ancestor: ancestor,\r\n    singleChildAncestor: singleChildAncestor,\r\n    listAncestor: listAncestor,\r\n    lastAncestor: lastAncestor,\r\n    listNext: listNext,\r\n    listPrev: listPrev,\r\n    listDescendant: listDescendant,\r\n    commonAncestor: commonAncestor,\r\n    wrap: wrap,\r\n    insertAfter: insertAfter,\r\n    appendChildNodes: appendChildNodes,\r\n    position: position,\r\n    hasChildren: hasChildren,\r\n    makeOffsetPath: makeOffsetPath,\r\n    fromOffsetPath: fromOffsetPath,\r\n    splitTree: splitTree,\r\n    splitPoint: splitPoint,\r\n    create: create,\r\n    createText: createText,\r\n    remove: remove,\r\n    removeWhile: removeWhile,\r\n    replace: replace,\r\n    html: html,\r\n    value: value,\r\n    posFromPlaceholder: posFromPlaceholder,\r\n    attachEvents: attachEvents,\r\n    detachEvents: detachEvents,\r\n    isCustomStyleTag: isCustomStyleTag\r\n};\r\n//# sourceMappingURL=dom.js.map","map":{"version":3,"file":"dom.js","sourceRoot":"","sources":["../../src/js/base/core/dom.js"],"names":[],"mappings":"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"}}
